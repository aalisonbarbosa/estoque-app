generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  password      String
  role          String?
  image         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  storeId       String
  accounts      Account[]
  sessions      Session[]
  store         Store      @relation(fields: [storeId], references: [id])
  Movement      Movement[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Store {
  id        String     @id @default(cuid())
  name      String
  address   String
  taxId     String?
  movements Movement[]
  products  Product[]
  users     User[]
}

model Product {
  id         String     @id @default(cuid())
  name       String
  quantity   Int
  price      Float
  storeId    String
  categoryId String
  supplierId String
  store      Store      @relation(fields: [storeId], references: [id])
  Movement   Movement[]
}

model Movement {
  id           String   @id @default(cuid())
  quantity     Int
  movementType String
  date         DateTime @default(now())
  storeId      String
  productId    String
  product      Product  @relation(fields: [productId], references: [id])
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  store        Store    @relation(fields: [storeId], references: [id])
}

model Category {
  id   String @id @default(cuid())
  name String
}

model Supplier {
  id   String @id @default(cuid())
  name String
  // storeId String
  // store   Store   @relation(fields: [storeId], references: [id])
}
